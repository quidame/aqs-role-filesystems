---
# role: filesystems
# file: defaults/main.yml
#
# This file should declare all or almost all variables of the role, describe
# them, provide examples and a safe default value for each.  A variable that
# is defined here may be overridden anywhere else, this place having the lowest
# precedence/priority/weight.
#
# All variables of this role should have a name of the form:
# filesystems__foo
# with two underscores between the role name (that is a prefix) and `foo`, i.e.
# what this variable is supposed to be for, as in:
# filesystems__login: admin
# filesystems__base_url: https://filesystems.qssdk.lab


################################################################################
## filesystems__action
#
# Define the main behaviour of the role. Valid values are 'setup' (the default)
# and 'unset'.  Depending of the role scope, this may be understood as install/
# uninstall, configure/unconfigure, start/stop, present/absent, create/destroy,
# add/remove, and so on.
#
filesystems__action: "setup"


################################################################################
## filesystems__behaviour
#
# This is also a behavioural variable that defines HOW the role will work.
# If 'serial' (the default), filesystems will be processed in parallel, i.e.
# all LV will be created, then all FS, then all mounts and so on. This mode is
# the most efficient.
# If 'sequential', filesystems will be processed sequentially, i.e. all tasks
# will be performed to setup/unset a filesystem, then all tasks for the next
# filesystem and so on.
#
filesystems__behaviour: "serial"


################################################################################
## filesystems__update_paths
#
# When set to True, this variable allows one to update paths of Logical Volumes
# or their mountpoints if for an active mount, one (and only one) of the LV name
# or directory path has changed in filesystems__list.
#
filesystems__update_paths: True


################################################################################
## filesystems__parents
#
# Dictionnary describing properties to apply to mountpoint's parent directories
# if they have to be created. Example:
#
#filesystems__parents:
#  owner: www-data
#  group: www-data
#  mode: 0750
#
filesystems__parents: {}


################################################################################
## filesystems__list
#
# Define the list of filesystems to setup through a list of dictionnaries, with
# variables matching parameters of ansible modules: lvol, filesystem, mount and
# file, except the 'opts' parameter, that is common to the three modules, but
# with a non-sharable value.
#
# Example:
#filesystems__list:
#  - path: /srv/mirror
#    vg: data02
#    lv: srv.mirror
#    size: 500G
#    fstype: xfs
#    owner: apt-mirror
#    group: apt-mirror
#  - path: /srv/tftp
#    vg: data02
#    lv: srv.tftp
#
filesystems__list: []


################################################################################
## filesystems__*
#
# These are the default values, that are applicable to any FS to setup, if not
# overridden by the same variables on a per-fs basis in filesystems__list.
#
filesystems__vg: vg0
filesystems__size: 512M
filesystems__fstype: ext4
#filesystems__force:     OMIT
#filesystems__resisefs:  OMIT
#filesystems__lvol_opts: OMIT
#filesystems__pvs:       OMIT
#filesystems__shrink:    OMIT
#filesystems__mkfs_opts: OMIT
#filesystems__backup:    OMIT
#filesystems__dump:      OMIT
#filesystems__mountopts: OMIT
#filesystems__passno:    OMIT
#filesystems__attr:      OMIT
#filesystems__group:     OMIT
#filesystems__mode:      OMIT
#filesystems__owner:     OMIT
#filesystems__selevel:   OMIT
#filesystems__serole:    OMIT
#filesystems__setype:    OMIT
#filesystems__seuser:    OMIT
