---
# role: filesystems
# file: tasks/checkpoint.yml


# This is intended to prevent late errors by catching common cases of failure.
# 1. OS compatibility
# 2. Mandatory parameters and their expected types, formats or values
# 3. Internal variables that MUST NOT be overridden from commandline and MUST
#    NOT conflict with inherited loop_var from another role, etc.
#
- name: "check point : role prerequisites and requirements"
  assert:
    # See in vars/main.yml for details about assertions (based on the following
    # ad hoc tasks vars)
    that: "{{ filesystems__role_assertions }}"
  vars:
    # RATIONALE:
    # When a mounted LV is renamed (with lvrename or dmsetup), system
    # commands other than those related to device-mapper are out-of-sync,
    # as long as the LV is not unmounted. Especially 'df' and 'findmnt',
    # as well as 'mount', still display the old name of the LV. But these
    # old good 'blkid' and 'lsblk' work fine. In the same way, gathered
    # facts are more ore less reliable, as they are based on the same
    # system tools. And unfortunately, ansible_mounts is not the most
    # reliable of them. The following piece of code ensures devices in
    # ansible_mounts exist in ansible_lvm or ansible_devices, etc.
    filesystems__out_of_sync: "{{ (ansible_mounts
      | json_query('[*].device')
      | map('regex_search', '^/dev/mapper/.*')
      | select('string')
      | map('basename')
      | list)
      | difference(ansible_devices
      | dict2items
      | json_query('[*].value.links.ids')
      | flatten
      | map('regex_search', 'dm-name-.*')
      | select('string')
      | map('regex_replace', 'dm-name-', '')
      | list) }}"
