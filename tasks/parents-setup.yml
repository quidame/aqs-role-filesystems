---
# role: filesystems
# file: tasks/parents-setup.yml
#
# Tasks to create parent directories of mountpoints before setting them.


# We need to build a list of directories from the list of mountpoints. The
# directories we want to list are the parents of all mountpoints, less the
# parents of nested mountpoints, less the mountpoints themtheves. Example:
#
# mountpoints:
#   - /var/foo
#   - /var/foo/bar/baz
#   - /opt/foo/bar
#   - /foo/bar/var
#
# directory tree:
#   - /foo
#   - /foo/bar
#   - /foo/bar/baz      -> discarded (mountpoint)
#   - /opt              -> discarded (is existing)
#   - /opt/foo
#   - /opt/foo/bar      -> discarded (mountpoint)
#   - /var              -> discarded (is existing)
#   - /var/foo          -> discarded (mountpoint)
#   - /var/foo/bar      -> discarded (is in /var/foo)
#   - /var/foo/bar/baz  -> discarded (mountpoint, is in /var/foo)
#
# will result in the creation (with specific mode, owner, etc) of the following
# directories:
#   - /foo
#   - /foo/bar
#   - /opt/foo
#
# /var/foo/bar is discarded because /var/foo is a mountpoint to be created.
# Creating it now has no sense as it will be hidden by the mount on /var/foo.


- name: "stat directories that could be created"
  stat:
    path: "{{ _fs_item }}"
  loop: "{{ __tempvar1__ | sort | unique }}"
  loop_control:
    loop_var: _fs_item
  register: _fs_parents_stat_
  vars:
    # List nested mountpoints, i.e. elements of the list that include another,
    # such as in [ "/srv", "/srv/tftp" ], /srv/tftp is a nested mount.
    __tempvar0__: |
      [
        {% for m in __mountpoints__ | product(__mountpoints__) | list if m.0 is match(m.1 + '/') %}
        "{{ m.0 }}"{{ '' if loop.last else ',' }}
        {% endfor %}
      ]
    # Decompose the full path to its components. Nested mounts are excluded
    # so the next step will not create directories that will be hidden by
    # the parent mount. For example, for [ "/srv", "/srv/www/local" ],
    # discard creation of /srv/www as it will disappear when mounting /srv.
    # Note that this may need additional tasks apart of this role to set
    # properties of /srv/www, since it will be created by the mount module
    # when creating /srv/www/local mountpoint with unsettable umask.
    __tempvar1__: |
      [
        {% for m in __mountpoints__ | difference(__tempvar0__) %}
        {% for i in range(1, m.split('/') | length - 1) %}
        "{{ m | regex_replace('(/[^/]+){%s}$' % i, '') }}"
        {{ '' if loop.last else ',' }}{% endfor %}
        {{ '' if loop.last else ',' }}{% endfor %}
      ]


- name: "create missing directories with non-default properties"
  file:
    path: "{{ _fs_item }}"
    attr:    "{{ filesystems__parents.attr    | d(omit) }}"
    mode:    "{{ filesystems__parents.mode    | d(omit) }}"
    owner:   "{{ filesystems__parents.owner   | d(omit) }}"
    group:   "{{ filesystems__parents.group   | d(omit) }}"
    selevel: "{{ filesystems__parents.selevel | d(omit) }}"
    serole:  "{{ filesystems__parents.serole  | d(omit) }}"
    setype:  "{{ filesystems__parents.setype  | d(omit) }}"
    seuser:  "{{ filesystems__parents.seuser  | d(omit) }}"
    state: directory
  loop: "{{ __tempvar0__ }}"
  loop_control:
    loop_var: _fs_item
  vars:
    __tempvar0__: |
      [
        {% for s in _fs_parents_stat_.results if not s.stat.exists %}
        "{{ s._fs_item }}"{{ '' if loop.last else ',' }}
        {% endfor %}
      ]
